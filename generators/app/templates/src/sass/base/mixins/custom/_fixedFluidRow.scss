/////////////////////////////////////-+++-/////////////////////////////////////////
// Fixed-Fluid Row
//
// This is a mixin for doing 1 fixed column and 1 fluid column.
// This layout uses flexbox then degrades to display: table
//
// the table layout is based on the bootstrap media object: http://getbootstrap.com/components/#media
//
// Supports ie9+. For ie8 and lower be sure to include selectivizr - selectivizr.com
//
// use the mixin like so:
//
//      .MyExampleClass {
//          // breakpoint, fixed side, spacing when stacked, gutter, position with stacked, width of fixed col
//          @include u-fixedFluidRow(800px, "left", 70px, 50px, "second", 300px);
//      }
//      // the mixin above will start at 800px breakpoint, with the fixed column on the left
//      // 70px worth of gutter, 50px between columns when stacked, the second column will
//      // show up first on mobile, and the fixed column will be 300px wide.
//
/////////////////////////////////////-+++-/////////////////////////////////////////


// $bp - when the grid is triggered
// $direction - which side is fixed
// $width - how big the fixed side is, leave empty to be as wide as the content
// $gutter - the distance between columns
// $layerSpace - the distance between columns when stacked
// $primary - which column should be first when stacked

// these are the styles for just the sidebar or rail
@mixin u-fixedFluidRow__fixed($bp, $width, $gutter) {

    @include mq($from: $bp) {
        width: $width + ($gutter * .5);
        flex: 0 0 $width + ($gutter * .5);

        .no-flexbox & {
            display: table-cell;
            vertical-align: top;

            img {
                display: block;
                max-width: $width;
                width: $width;
            }
        }
    }   
}

// these are the styles for the main column
@mixin u-fixedFluidRow__fluid($bp, $layerSpace) {
    margin-bottom: $layerSpace;

    @include mq($from: $bp) {
        margin-bottom: 0;
        flex: 1;

        .no-flexbox & {
            display: table-cell;
            vertical-align: middle;
            overflow: hidden;
            zoom: 1;
            width: 10000px;
        }
    }
}

// lets put it all together now
@mixin u-fixedFluidRow($bp, $direction, $gutter, $layerSpace: 0, $primary: "first", $width: auto) {
    display: flex;
    flex-direction: column;
    width: 100%;

    @include mq($from: $bp) {
        flex-direction: row;

        .no-flexbox & {
            overflow: hidden;
            zoom: 1;
            display: table;
        }
    }

    // main column
    & > div:last-child {
        @if $direction == "left" {
            @include u-fixedFluidRow__fluid($bp, $layerSpace);

        } @else {
            @include u-fixedFluidRow__fixed($bp, $width, $gutter);    
        } 

        @if $primary == "first" {
            order: 2;
        } @else {
            order: 1;
        }

        @include mq($from: $bp) {
            order: 2;
            padding-left: $gutter*.5;      
        }
    }

    & > div:first-child {
        @if $direction == "left" {
            @include u-fixedFluidRow__fixed($bp, $width, $gutter);   

        } @else {
            @include u-fixedFluidRow__fluid($bp, $layerSpace); 
        } 

        @if $primary == "first" {
            order: 1;
        } @else {
            order: 2;
        }

        @include mq($from: $bp) {
            padding-right: $gutter*.5;  
            order: 1;    
        }
    }
    
    // this is a flexbox bug in firefox where the img breaks the container otherwise
    img {
        width: 100%;
        max-width: $width; // testing 1 .. 2
    }
}



/////////////////////////////////////-+++-
// version with a border
//
// $borderColor - the color of the border
// $borderWidth - the width of the border
// $borderPosition - can take "middle", "right", or "left". Left would make the border flush with the left column.

@mixin u-fixedFluidRow--border($bp, $direction, $gutter, $borderColor, $borderWidth, $borderPosition: "middle", $layerSpace: 0, $primary: 'first', $width: 'auto') {
    @include u-fixedFluidRow($bp, $direction, $gutter, $layerSpace, $primary, $width);


    & > div:first-child {
        position: relative;

        @include mq($from: $bp) {
            @if $borderPosition == "left" {
                padding-right: 0;
            } @elseif $borderPosition == "right" {
                padding-right: $gutter;
            }
        } 

        &:after {
            @include u-absolute(null, 0, -$borderWidth * .5, null);
            content: '';
            background: $borderColor;
            width: 100%;
            height: $borderWidth;

            @include mq($from: $bp) {
                width: $borderWidth;
                height: 100%;
                bottom: 0;

                @if $borderPosition == "middle" {
                    right: -$borderWidth * .5;
                }
            }
        }
    }

    & > div:last-child {
        @include mq($from: $bp) {
            @if $borderPosition == "left" {
                padding-left: $gutter;
            } @elseif $borderPosition == "right" {
                padding-left: 0;
            }    
        }    
    }
}